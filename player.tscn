[gd_scene load_steps=4 format=3 uid="uid://then0r74tx52"]

[ext_resource type="PackedScene" uid="uid://c62ix868ex3o7" path="res://gun.tscn" id="1_4flbx"]

[sub_resource type="GDScript" id="GDScript_4xowi"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

var stop = false
var gravity = 9.8
var dmg = 1

@onready var head = $Head
@onready var camera = $Head/PlayerCam
@onready var gun_anim = $Head/PlayerCam/Gun/AnimationPlayer
@onready var aim_ray = $\"Head/PlayerCam/Enemy Raycast\"
@onready var aim_ray2 = $\"Head/PlayerCam/Near Raycast\"

func _ready():
	if stop == false:
		Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED) 
	else: pass

#mouse look function
func _unhandled_input(event): 
	if stop == false:
		if event is InputEventMouseMotion:
			head.rotate_y(-event.relative.x * Global.sens) #Y is side to side movement (rotation across Y axis)
			camera.rotate_x(-event.relative.y * Global.sens) #X is up and down movement (rotation across X axis)
			camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-30), deg_to_rad(70))
	else: pass
	



#Premade code under this

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
	
	camera.fov = Global.fov
	
	
func _process(_delta):
	if Input.is_action_pressed(\"Interact\"):
		if !gun_anim.is_playing():
			gun_anim.play(\"Shoot\")
			if aim_ray.is_colliding():
				var target = aim_ray.get_collider()
				if target.is_in_group(\"Enemy\"):
					target.health -= dmg
			if aim_ray2.is_colliding():
				var misstarget = aim_ray2.get_collider()
				if misstarget.is_in_group(\"Enemy\"):
					if aim_ray.is_colliding():
						var target = aim_ray.get_collider()
						if target.is_in_group(\"Enemy\"):
							pass
					else:
						Global.miss += 1
						print(Global.miss)
	


func _on_end_hello_bro() -> void:
	stop = true
	pass # Replace with function body.
"

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_noarx"]
points = PackedVector3Array(-0.125207, -0.532801, -0.480507, 0.0227831, 0.47607, 0.498884, 0.169713, 0.559144, 0.464172, 0.231051, -0.803591, 0.320455, 0.40741, 0.651043, -0.243523, -0.482789, 0.594843, 0.0822132, -0.362868, -0.682312, 0.289697, 0.469044, -0.654529, -0.0662713, -0.127444, 0.842701, -0.338103, -0.393435, -0.683942, -0.244717, 0.438255, 0.623309, 0.200849, 0.0841477, 0.977454, 0.114795, -0.0682023, -0.976458, -0.12927, 0.20055, -0.563129, -0.451454, -0.185527, 0.595453, -0.453475, -0.273363, 0.592268, 0.407754, -0.00693649, -0.476823, 0.49966, 0.375821, -0.588614, 0.316955, 0.111579, 0.563059, -0.481177, -0.41725, 0.527866, -0.270497, -0.484546, -0.596972, -0.0665097, -0.279747, 0.908561, 0.0533361, -0.250197, -0.880712, 0.205319, 0.263647, -0.902771, -0.127394, 0.293368, 0.871526, -0.157196, 0.373412, -0.526319, -0.328246, 0.499663, 0.476641, -0.00688856, 0.0531056, 0.875001, 0.324703, -0.154543, -0.590854, 0.465879, -0.0972799, -0.782358, -0.398188, -0.387649, -0.498171, 0.31565, -0.30068, -0.587995, -0.388901)

[node name="CharacterBody3D" type="CharacterBody3D"]
transform = Transform3D(-4.39955e-08, 0, -1.0065, 0, 1.0065, 0, 1.0065, 0, -4.39955e-08, 0, 0, 0)
script = SubResource("GDScript_4xowi")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.1, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00645137, -0.0577825, -0.0124724)
shape = SubResource("ConvexPolygonShape3D_noarx")
debug_color = Color(0.807893, 0.00225887, 0.990889, 0.42)

[node name="Head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.647632, 0)

[node name="PlayerCam" type="Camera3D" parent="Head"]
transform = Transform3D(0.993542, 0, 0, 0, 0.993542, 0, 0, 0, 0.993542, 0, 0, 0)

[node name="Gun" parent="Head/PlayerCam" instance=ExtResource("1_4flbx")]
transform = Transform3D(-0.04, 0, -6.03983e-09, 0, 0.04, 0, 6.03983e-09, 0, -0.04, 0.320073, -0.430946, -0.698611)

[node name="Enemy Raycast" type="RayCast3D" parent="Head/PlayerCam"]
transform = Transform3D(1, 4.37114e-08, -1.91069e-15, 0, -4.37114e-08, -1, -4.37114e-08, 1, -4.37114e-08, 0, 0, 0)
target_position = Vector3(0, -100, 0)
collision_mask = 2
collide_with_areas = true

[node name="Near Raycast" type="RayCast3D" parent="Head/PlayerCam"]
transform = Transform3D(1, 4.37114e-08, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, -4.37114e-08, 1, -4.37114e-08, 0, 0, 0)
target_position = Vector3(0, -100, 0)
collision_mask = 4
collide_with_areas = true
debug_shape_custom_color = Color(0.545324, 0.433721, 0.783937, 1)
debug_shape_thickness = 5
